//////////////////////////////////////////////////////////////////////////////
// SFXSingleton.cs
//////////////////////////////////////////////////////////////////////////////
// Listens for events that can generate sound and plays the sound if
// enabled.
//////////////////////////////////////////////////////////////////////////////

using UnityEngine;
using System.Collections;

public class SFXSingleton : MonoBehaviour
{
	///////////////////////////////////////////////////////////////////////////
	// STATIC VARIABLES
	///////////////////////////////////////////////////////////////////////////
	
	//Holds the current instance of the singleton
	public static SFXSingleton instance = null;
	
	///////////////////////////////////////////////////////////////////////////
	// INSPECTOR VARIABLES
	///////////////////////////////////////////////////////////////////////////
	
	//Audio clip for death
	public AudioClip deathClip;
	
	
	///////////////////////////////////////////////////////////////////////////
	// CLASS DATA
	///////////////////////////////////////////////////////////////////////////

	
	///////////////////////////////////////////////////////////////////////////
	// AUDIO SOURCES
	///////////////////////////////////////////////////////////////////////////
	
	//death src
	AudioSource deathSrc;

	///////////////////////////////////////////////////////////////////////////
	// LISTENERS
	///////////////////////////////////////////////////////////////////////////

	private EnemyCollisionEventHandler EnemyCollisionListener;
	
	///////////////////////////////////////////////////////////////////////////
	// AWAKE
	///////////////////////////////////////////////////////////////////////////
	
	// Use this for initialization
	void Awake()
	{
		//if instance already exists then destroy this clone
		if(instance != null && instance != this)
		{
			Destroy(this.gameObject);
			return;
		}
		//if first instance then save it
		else
		{
			instance = this;
		}
		
		//prevent this object from being destroyed
		DontDestroyOnLoad(this.gameObject);
		
		//register as listener
		EnemyCollisionListener = new EnemyCollisionEventHandler(PlayerEnemyCollide);
		EventManager.EnemyCollisionEvent += EnemyCollisionListener;
		
		//create audio sources
		createSources();
	}
	
	///////////////////////////////////////////////////////////////////////////
	// EVENT LISTENING
	///////////////////////////////////////////////////////////////////////////

	private void PlayerEnemyCollide(Enemy enemy, Collider2D collision)
	{
		Debug.Log ("S0und " + enemy.name);
		deathSrc.Play ();
	}
	
	///////////////////////////////////////////////////////////////////////////
	// PRIVATE FUNCTIONS
	///////////////////////////////////////////////////////////////////////////
	
	//Initialises the audio sources used for the sound effects
	private void createSources()
	{	
		deathSrc = gameObject.AddComponent<AudioSource>();
		deathSrc.clip = deathClip;
	}
}
